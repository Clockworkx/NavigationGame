[{"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\index.js":"1","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\App.js":"2","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\reportWebVitals.js":"3","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\Home.js":"4","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\mapStyles.js":"5","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\GoogleMaps.js":"6","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\CurrentGameInfo.js":"7","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Timer.js":"8","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\services\\socket.js":"9","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Game.js":"10","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Home.js":"11","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Navbar.js":"12","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\CreateGame.js":"13","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\services\\gameService.js":"14","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\services\\GameService.js":"15"},{"size":592,"mtime":1608494369144,"results":"16","hashOfConfig":"17"},{"size":862,"mtime":1608495599449,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":1278,"mtime":1607816623511,"results":"20","hashOfConfig":"17"},{"size":3951,"mtime":1607731907475,"results":"21","hashOfConfig":"22"},{"size":5783,"mtime":1608057625043,"results":"23","hashOfConfig":"17"},{"size":638,"mtime":1607828486195,"results":"24","hashOfConfig":"22"},{"size":961,"mtime":1607908506681,"results":"25","hashOfConfig":"17"},{"size":120,"mtime":1608085431575,"results":"26","hashOfConfig":"17"},{"size":7969,"mtime":1608494829895,"results":"27","hashOfConfig":"17"},{"size":477,"mtime":1608496948959,"results":"28","hashOfConfig":"17"},{"size":876,"mtime":1608496656734,"results":"29","hashOfConfig":"17"},{"size":864,"mtime":1608499543479,"results":"30","hashOfConfig":"17"},{"size":768,"mtime":1608498896046,"results":"31","hashOfConfig":"17"},{"size":768,"mtime":1608498896046,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"d5cn1p",{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},"in944b",{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\index.js",[],["73","74"],"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\App.js",["75","76","77"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport CreateGame from './components/CreateGame'\r\nimport Navbar from './components/Navbar'\r\nimport Home from './components/Home'\r\n\r\nconst App = () => {\r\n    return (\r\n          <div className=\"Home\">\r\n                          \r\n            {/* A <Switch> looks through its children <Route>s and\r\n                renders the first one that matches the current URL. */}\r\n            <Switch>\r\n              <Route path=\"/createGame\">\r\n                <CreateGame />\r\n              </Route>\r\n              <Route path=\"/users\">\r\n                <Home />\r\n              </Route>\r\n              <Route exact path=\"/\">\r\n                <Home />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n      );\r\n}\r\n\r\nexport default App","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\reportWebVitals.js",[],"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\Home.js",["78","79","80","81","82","83","84","85","86"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Game from './App'\r\nimport Maps2 from './GoogleMaps'\r\n\r\nconst Home = () => (\r\n  <div> <h2>TKTL notes app</h2> </div>\r\n)\r\n\r\nconst Notes = () => (\r\n  <div> <h2>Statistics</h2> </div>\r\n)\r\n\r\nconst Users = () => (\r\n  <div> <h2>Users</h2> </div>\r\n)\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [page, setPage] = useState('game')\r\n\r\n const toPage = (page) => (event) => {\r\n    event.preventDefault()\r\n    setPage(page)\r\n  }\r\n\r\n  const content = () => {\r\n    if (page === 'game') {\r\n      return <Game />\r\n    } else if (page === 'maps2') {\r\n      return <Maps2 />\r\n    } else if (page === 'users') {\r\n      return <Users />\r\n    }\r\n  }\r\n\r\n\r\n  const padding = {\r\n    padding: 5\r\n  }\r\n\r\n  return (\r\n    <div className=\"fornavbar\">\r\n      <div>\r\n        <a href=\"\" onClick={toPage('game')} style={padding}>\r\n          Game\r\n        </a>\r\n        <a href=\"\" onClick={toPage('maps2')} style={padding}>\r\n          Maps2\r\n        </a>\r\n        <a href=\"\" onClick={toPage('users')} style={padding}>\r\n          Users\r\n        </a>\r\n        <a href=\"\" onClick={toPage('timer')} style={padding}>\r\n          Timer\r\n        </a>\r\n      </div>\r\n\r\n      {content()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App",["87","88"],"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\mapStyles.js",["89"],"export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#444444\"\r\n            },\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.neighborhood\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#e0dfe0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi.park\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#a8a9a8\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#5b5b5a\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    }\r\n]",["90","91"],"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\GoogleMaps.js",["92","93","94","95"],"import React from 'react'\r\nimport { GoogleMap, useLoadScript, Marker, InfoWindow, StreetViewPanorama } from '@react-google-maps/api'\r\nimport { useState, useRef, useCallback } from 'react'\r\n// import mapStyle from '../mapStyles'\r\nimport '../index.css'\r\n\r\nimport { formatRelative } from \"date-fns\";\r\n\r\nconst libraries = [\"places\"]\r\nconst mapContainerStyle = {\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n}\r\n\r\nconst center = {\r\n    lat: 40.745,\r\n    lng: -38.523\r\n}\r\n//styles: mapStyle,\r\nconst options = {\r\n\r\n    disableDefaultUI: true,\r\n    zoomControl: true\r\n}\r\n\r\n\r\nconst Map = () => {\r\n    const { isLoaded, loadError } = useLoadScript({\r\n        googleMapsApiKey: 'AIzaSyD-H7u_wA8hIqXBZteUdLr4oG0cVNoEl2c',\r\n        libraries,\r\n    })\r\n\r\n    const [marker, setMarker] = useState({lat: 0, lng: 0})\r\n    const [selected, setSelected] = useState(null)\r\n    //   const [coords, setCoords] = useState([])\r\n\r\n    // const [sizeWH, setSizeWH] = useState({ width: 320, height: 200 })\r\n    // const [position, setPosition] = useState({ x: 0, y: 0 })\r\n    // const [dragging, setDragging] = useState(false)\r\n    //   const [containerStyle, setContainerStyle] = useState({\r\n    //     width: '100%',\r\n    //     height: '100%'\r\n    //   })\r\n\r\n\r\n    const handleMapClick = useCallback(event => {\r\n        setMarker({\r\n            lat: event.latLng.lat(),\r\n            lng: event.latLng.lng(),\r\n            time: new Date()\r\n        })\r\n    }, [])\r\n\r\n    const mapRef = useRef();\r\n    const onMapLoad = useCallback(map => mapRef.current = map, [])\r\n    const [test, setTest] = useState('null')\r\n    \r\n    if (loadError) return \"Error loading maps\";\r\n    if (!isLoaded) return \"Loading Maps\"\r\n\r\n    return (\r\n        <div className=\"Map\">\r\n            {/* <button onClick={() => mapRef.current.panTo({lat: 43, lng: -75})}>pan To from Map reference</button> */}\r\n            <GoogleMap\r\n                mapContainerStyle={mapContainerStyle}\r\n                zoom={3}\r\n                center={center}\r\n                options={options}\r\n                onClick={handleMapClick}\r\n                onLoad={onMapLoad}\r\n            >\r\n                if (marker)\r\n                <Marker\r\n                    position={{ lat: marker.lat, lng: marker.lng }}\r\n                    icon={{\r\n                        url: \"/test.png\",\r\n                        scaledSize: new window.google.maps.Size(30, 30),\r\n                        origin: new window.google.maps.Point(0, 0),\r\n                        anchor: new window.google.maps.Point(15, 15)\r\n                    }}\r\n                    onClick={() => {\r\n                        setSelected(marker)\r\n                    }}\r\n                />\r\n                {selected ? (\r\n                    <InfoWindow position={{ lat: selected.lat, lng: selected.lng }}\r\n                        onCloseClick={() => setSelected(null)}>\r\n                        <div>\r\n                            <h2>test</h2>\r\n                            <p>spotted at {formatRelative(selected.time, new Date())}</p>\r\n                        </div>\r\n                    </InfoWindow>) : null}\r\n            </GoogleMap>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StreetView = () => {\r\n    const { isLoaded, loadError } = useLoadScript({\r\n        googleMapsApiKey: 'AIzaSyD-H7u_wA8hIqXBZteUdLr4oG0cVNoEl2c',\r\n        libraries,\r\n    })\r\n    //   const [coords, setCoords] = useState([])\r\n    const [test, setTest] = useState('null')\r\n\r\n    const mapRef = React.useRef();\r\n    const onMapLoad = React.useCallback(map => mapRef.current = map, [])\r\n    const streetViewRef = React.useRef()\r\n    const onStreetViewLoad = useCallback(streetView => streetViewRef.current = streetView, [])\r\n\r\n    if (loadError) return \"Error loading maps\";\r\n    if (!isLoaded) return \"Loading Maps\"\r\n\r\n    const streetViewPosition = {lat: -3.745, lng: -38.523}\r\n\r\n    return (\r\n        <div className=\"StreetView\">\r\n            <button onClick={() =>\r\n                    console.log(mapRef.current)} >mapRef</button>\r\n                <button onClick={() =>\r\n                    console.log(streetViewRef.current)} >streetViewRef</button>\r\n                <button onClick={() =>\r\n                    streetViewRef.current.setPosition(streetViewPosition)} >back to start</button>\r\n                <button onClick={() =>\r\n                    console.log(streetViewRef.current.getLocation().latLng.lat(), streetViewRef.current.getLocation().latLng.lat())} >get Position street VIew</button>\r\n            <GoogleMap\r\n                mapContainerStyle={mapContainerStyle}\r\n                zoom={3}\r\n                center={center}\r\n                options={options}\r\n                onLoad={onMapLoad}\r\n            >\r\n                <StreetViewPanorama\r\n                    position={streetViewPosition}\r\n                    visible={true}\r\n                    options={{ disableDefaultUI: true, enableCloseButton: false, showRoadLabels: false }}\r\n                    onLoad={onStreetViewLoad}\r\n                    onStatusChanged={() => console.log('status changed', streetViewRef)}\r\n                />\r\n            </GoogleMap>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction haversine_distance(mk1, mk2) {\r\n    var R = 6371.0710; // Radius of the Earth in miles\r\n    var rlat1 = mk1.position.lat() * (Math.PI/180); // Convert degrees to radians\r\n    var rlat2 = mk2.position.lat() * (Math.PI/180); // Convert degrees to radians\r\n    var difflat = rlat2-rlat1; // Radian difference (latitudes)\r\n    var difflon = (mk2.position.lng()-mk1.position.lng()) * (Math.PI/180); // Radian difference (longitudes)\r\n\r\n    var d = 2 * R * Math.asin(Math.sqrt(Math.sin(difflat/2)*Math.sin(difflat/2)+Math.cos(rlat1)*Math.cos(rlat2)*Math.sin(difflon/2)*Math.sin(difflon/2)));\r\n    return d;\r\n  }\r\n\r\nexport {Map, StreetView, haversine_distance}","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\CurrentGameInfo.js",["96","97"],"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Timer.js",[],"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\services\\socket.js",[],"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Game.js",["98","99","100","101","102","103","104","105","106","107","108"],"// import { Rnd } from 'react-rnd'\r\n// import { useState } from 'react'\r\nimport React from 'react'\r\nimport '../index.css';\r\nimport {Map, StreetView} from './GoogleMaps'\r\n// import CurrentGameInfo from './components/CurrentGameInfo'\r\nimport Timer from './Timer'\r\nimport { useState, useRef, useEffect } from 'react'\r\nimport {socket} from '../services/socket'\r\nimport {BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link} from 'react-router-dom'\r\n\r\n\r\n// const center = {\r\n//   lat: 51.165691,\r\n//   lng: 10.451526\r\n// }\r\n\r\nconst Round = ({setGameStatus}) => {\r\n  const [ timerState, setTimerState ] = useState(null)\r\n  console.log('timerState', timerState)\r\n\r\n  if (timerState === 0) {\r\n    setGameStatus(\"isPostRoundDisplay\")\r\n    return <> </>\r\n  }\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <Navbar />\r\n      <StreetView />\r\n      <Map />\r\n      <CurrentGameInfo setTimerState={setTimerState}/>\r\n    </div>\r\n  )\r\n}\r\nconst Game = () => {\r\n  const [gameStatus, setGameStatus] = useState(\"isInRound\")\r\n  const [currentRound, setCurrentRound] = useState(1)\r\n\r\n\r\n  switch (gameStatus) {\r\n    case \"isInRound\":\r\n      return (\r\n        <Round setGameStatus={setGameStatus} />\r\n      )\r\n      break;\r\n    case \"isPostRoundDisplay\":\r\n        return (\r\n          <MidgameResults currentRound={currentRound} setCurrentRound={setCurrentRound} setGameStatus={setGameStatus}/>\r\n        )\r\n        break;\r\n    case \"isGameOver\":\r\n          return (\r\n            <GameOverResults />\r\n          )\r\n          break;\r\n  \r\n    default:\r\n      return (\r\n        <div>Something went wrong</div>\r\n      )\r\n      break;\r\n  }\r\n\r\n\r\n}\r\n\r\nconst GameOverResults = () => {\r\n  return (\r\n    <div>Game Over</div>\r\n  )\r\n}\r\n\r\nconst InfoDisplay = () => {\r\n  return (\r\n    <div className=\"infoDisplay\">\r\n      {/* mouse click position {coords} */}\r\n      lorem ipsum\r\n      {/* <div>\r\n        <button onClick={() => setDragging(!dragging)}>disable drag</button>\r\n      </div> */}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst CurrentGameInfo = ({timerState, setTimerState, formatted}) => {\r\n    const [isGameStarted, setIsGameStarted] = useState(false)\r\n\r\n    const handleStartGame = (event) => {\r\n        console.log(event)\r\n        setIsGameStarted(!isGameStarted)\r\n\r\n    }\r\n    if (isGameStarted){\r\n      return (\r\n        <div>\r\n            <Timer setTimerState={setTimerState}/>    \r\n            Round , \r\n        </div>\r\n    )\r\n    \r\n    }\r\n    else return (\r\n      <div>Waiting for Host to start game\r\n          <button onClick={handleStartGame}>Start Game</button>\r\n      </div>\r\n      )\r\n}\r\n\r\nconst Navbar = () => {\r\n\r\n  const [inviteReceived, setinviteReceived] = useState(false)\r\n  useEffect(() => {\r\n    socket.on('connect', () => {\r\n      console.log('connected')\r\n    })\r\n    socket.on('disconnect', () => {\r\n      console.log('disconnected')\r\n    })\r\n    socket.on('SMConnectionReceived', (arg) => console.log(arg))\r\n    socket.on('locations_send', (locations) => {\r\n      console.log('loca', locations)\r\n\r\n    })\r\n    console.log('hi')\r\n    return () => {\r\n      socket.offAny(() => console.log('off any'))\r\n      console.log('cleanup')\r\n    }\r\n  }, [])\r\n  return (\r\n    <div className=\"navbar\" > <h1>Professor Geo {\" \"} <span role=\"img\" aria-label=\"geo\">🐱‍🏍</span></h1>\r\n    {/* <Search /> */}\r\n    <button onClick={() => {socket.emit('location_request', ['test'])}}>get random map</button>\r\n    {inviteReceived ? \"pending invite\" : \"no pending invite\"}\r\n    <button onClick={(params) => {\r\n      socket.emit('CMCreateGame')\r\n      \r\n    }}>Create New Game</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst InterimResults = ({currentRound, setCurrentRound, setGameStatus}) => {\r\n\r\n  const handleNextRound = () => {\r\n    if (currentRound < 5){\r\n      setGameStatus(\"isInRound\")\r\n      setCurrentRound(previousState => previousState + 1)\r\n    }\r\n\r\n    if (currentRound === 5) {\r\n      setGameStatus(\"isGameOver\")\r\n      return <> </>\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      Marco da best \r\n      <button onClick={handleNextRound}>Next Round</button>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst MidgameResults = ({currentRound, setCurrentRound, setGameStatus}) => {\r\n\r\n  return (\r\n    <div className=\"midgameResults\">\r\n      <Navbar />\r\n  <Map/>\r\n  <InterimResults currentRound={currentRound} setCurrentRound={setCurrentRound} setGameStatus={setGameStatus} />\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n\r\n\r\n// const Map = () => {\r\n\r\n//   const [coords, setCoords] = useState([])\r\n\r\n//   const [sizeWH, setSizeWH] = useState({ width: 320, height: 200 })\r\n//   const [position, setPosition] = useState({ x: 0, y: 0 })\r\n//   const [dragging, setDragging] = useState(false)\r\n//   const [containerStyle, setContainerStyle] = useState({\r\n//     width: '100%',\r\n//     height: '100%'\r\n//   })\r\n\r\n\r\n// const handleMapClick = (eventt) => {\r\n//   setCoords(`Latitude: ${eventt.latLng.lat()} Longitude: ${eventt.latLng.lng()}`)\r\n// }\r\n\r\n// const containerStyle = {\r\n//   width: \"100%\",\r\n//   height: \"100%\"\r\n// };\r\n// const style = {\r\n//   display: \"flex\",\r\n//   alignItems: \"center\",\r\n//   justifyContent: \"center\",\r\n//   border: \"solid 20px #ddd\",\r\n//   background: \"#f0f0f0\"\r\n// };\r\n\r\n// class Map extends React.Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       width: 200,\r\n//       height: 200,\r\n//       x: 10,\r\n//       y: 10\r\n//     };\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//         <div class=\"mapflex\">\r\n//           <button>test</button>\r\n//         <Rnd\r\n//           className={Map}\r\n//           style={{backgroundColor: \"#ff6f69\", border: \"10px solid green\"}}\r\n//           size={{ width: this.state.width, height: this.state.height }}\r\n//           position={{ x: this.state.x, y: this.state.y }}\r\n//           onDragStop={(e, d) => {\r\n//             this.setState({ x: d.x, y: d.y });\r\n//           }}\r\n//           onResizeStop={(e, direction, ref, delta, position) => {\r\n//             this.setState({\r\n//               width: ref.style.width,\r\n//               height: ref.style.height,\r\n//               ...position\r\n//             });\r\n//           }}\r\n//         >t<button>asd</button>\r\n//         est\r\n//           {/* <LoadScript googleMapsApiKey=\"AIzaSyANah7Rp_9i7F0FkhJ0w50q9TGqQbUErOM\">\r\n//             <GoogleMap\r\n//               mapContainerStyle={containerStyle}\r\n//               center={center}\r\n//               zoom={10}\r\n//               onClick={() => {\r\n//                 console.log(this.state.x);\r\n//               }}\r\n//             ></GoogleMap>\r\n//           </LoadScript> */}\r\n//         </Rnd>\r\n//         </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const Street = ({ center }) => {\r\n//   const [coords, setCoords] = useState([])\r\n\r\n//   const [sizeWH, setSizeWH] = useState({ width: 320, height: 200 })\r\n//   const [position, setPosition] = useState({ x: 0, y: 0 })\r\n//   const [dragging, setDragging] = useState(false)\r\n//   const [containerStyleStreetView, setContainerStyleStreetView] = useState({\r\n//     width: '100%',\r\n//     height: '100%'\r\n//   })\r\n//   const [pano, setPano] = useState({\r\n//     lat: -3.745,\r\n//     lng: -38.523\r\n//   })\r\n\r\n//   return (\r\n//     <div className=\"StreetView\">\r\n//       {/* <button onClick={() => {setPano({\r\n//     lat: -3.745,\r\n//     lng: -38.523\r\n//   })}}>change location</button> */}\r\n//       <LoadScript\r\n//         googleMapsApiKey=\"AIzaSyANah7Rp_9i7F0FkhJ0w50q9TGqQbUErOM\"\r\n//       >\r\n//         <GoogleMap\r\n//           mapContainerStyle={containerStyleStreetView}\r\n//           center={center}\r\n//           zoom={10}\r\n//         >\r\n//           <StreetViewPanorama\r\n//             position={pano}\r\n//             visible={true}\r\n//             options={{disableDefaultUI: true, enableCloseButton: false}}\r\n//             onLoad={(panorama => setPano(panorama))}\r\n            \r\n//           />\r\n//           { /* Child components, such as markers, info windows, etc. */}\r\n//           <></>\r\n//         </GoogleMap>\r\n//       </LoadScript>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nexport default Game;","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Home.js",["109","110","111","112"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Navbar from '../components/Navbar'\r\n\r\nconst Home = () => {\r\n    return (\r\n      <div>\r\n        <Navbar/>\r\n        <h1>GeoBesser</h1>\r\n        <p>Select gamemode, play with friends, solo, </p>\r\n        <p>Vorgestellte gamemodi</p>\r\n        <p>Leaderboards / some stats</p>\r\n        <p>sidebar</p>\r\n      </div>\r\n      );\r\n}\r\n\r\n\r\nexport default Home","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Navbar.js",["113","114","115","116","117","118"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n          <div class=\"Navbar\">\r\n            <nav>\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/createGame\">Create Game</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/users\">Users</Link>\r\n                </li>\r\n                <li>\r\n                    <span>Userinfo</span>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n      );\r\n}\r\nfunction About() {\r\n    return <h2>About</h2>;\r\n  }\r\n  \r\n  function Users() {\r\n    return <h2>Users</h2>;\r\n  }\r\n  \r\n  function Home() {\r\n    return <h2>Home</h2>;\r\n  }\r\n\r\nexport default Navbar","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\CreateGame.js",["119"],"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\services\\gameService.js",["120"],"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\services\\GameService.js",["121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":3,"column":20,"nodeType":"128","messageId":"129","endLine":3,"endColumn":26},{"ruleId":"126","severity":1,"message":"130","line":6,"column":3,"nodeType":"128","messageId":"129","endLine":6,"endColumn":7},{"ruleId":"126","severity":1,"message":"131","line":9,"column":8,"nodeType":"128","messageId":"129","endLine":9,"endColumn":14},{"ruleId":"126","severity":1,"message":"132","line":1,"column":27,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"126","severity":1,"message":"133","line":1,"column":38,"nodeType":"128","messageId":"129","endLine":1,"endColumn":44},{"ruleId":"126","severity":1,"message":"134","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":16},{"ruleId":"126","severity":1,"message":"135","line":6,"column":7,"nodeType":"128","messageId":"129","endLine":6,"endColumn":11},{"ruleId":"126","severity":1,"message":"136","line":10,"column":7,"nodeType":"128","messageId":"129","endLine":10,"endColumn":12},{"ruleId":"137","severity":1,"message":"138","line":47,"column":9,"nodeType":"139","endLine":47,"endColumn":61},{"ruleId":"137","severity":1,"message":"138","line":50,"column":9,"nodeType":"139","endLine":50,"endColumn":62},{"ruleId":"137","severity":1,"message":"138","line":53,"column":9,"nodeType":"139","endLine":53,"endColumn":62},{"ruleId":"137","severity":1,"message":"138","line":56,"column":9,"nodeType":"139","endLine":56,"endColumn":62},{"ruleId":"122","replacedBy":"140"},{"ruleId":"124","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":1,"nodeType":"144","endLine":191,"endColumn":2},{"ruleId":"122","replacedBy":"145"},{"ruleId":"124","replacedBy":"146"},{"ruleId":"126","severity":1,"message":"147","line":56,"column":12,"nodeType":"128","messageId":"129","endLine":56,"endColumn":16},{"ruleId":"126","severity":1,"message":"148","line":56,"column":18,"nodeType":"128","messageId":"129","endLine":56,"endColumn":25},{"ruleId":"126","severity":1,"message":"147","line":104,"column":12,"nodeType":"128","messageId":"129","endLine":104,"endColumn":16},{"ruleId":"126","severity":1,"message":"148","line":104,"column":18,"nodeType":"128","messageId":"129","endLine":104,"endColumn":25},{"ruleId":"126","severity":1,"message":"133","line":2,"column":20,"nodeType":"128","messageId":"129","endLine":2,"endColumn":26},{"ruleId":"126","severity":1,"message":"132","line":2,"column":28,"nodeType":"128","messageId":"129","endLine":2,"endColumn":37},{"ruleId":"126","severity":1,"message":"133","line":8,"column":20,"nodeType":"128","messageId":"129","endLine":8,"endColumn":26},{"ruleId":"126","severity":1,"message":"127","line":10,"column":26,"nodeType":"128","messageId":"129","endLine":10,"endColumn":32},{"ruleId":"126","severity":1,"message":"149","line":11,"column":3,"nodeType":"128","messageId":"129","endLine":11,"endColumn":9},{"ruleId":"126","severity":1,"message":"150","line":12,"column":3,"nodeType":"128","messageId":"129","endLine":12,"endColumn":8},{"ruleId":"126","severity":1,"message":"130","line":13,"column":3,"nodeType":"128","messageId":"129","endLine":13,"endColumn":7},{"ruleId":"151","severity":1,"message":"152","line":49,"column":7,"nodeType":"153","messageId":"154","endLine":49,"endColumn":13},{"ruleId":"151","severity":1,"message":"152","line":54,"column":9,"nodeType":"153","messageId":"154","endLine":54,"endColumn":15},{"ruleId":"151","severity":1,"message":"152","line":59,"column":11,"nodeType":"153","messageId":"154","endLine":59,"endColumn":17},{"ruleId":"151","severity":1,"message":"152","line":65,"column":7,"nodeType":"153","messageId":"154","endLine":65,"endColumn":13},{"ruleId":"126","severity":1,"message":"155","line":77,"column":7,"nodeType":"128","messageId":"129","endLine":77,"endColumn":18},{"ruleId":"126","severity":1,"message":"156","line":116,"column":26,"nodeType":"128","messageId":"129","endLine":116,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":3,"column":20,"nodeType":"128","messageId":"129","endLine":3,"endColumn":26},{"ruleId":"126","severity":1,"message":"149","line":4,"column":3,"nodeType":"128","messageId":"129","endLine":4,"endColumn":9},{"ruleId":"126","severity":1,"message":"150","line":5,"column":3,"nodeType":"128","messageId":"129","endLine":5,"endColumn":8},{"ruleId":"126","severity":1,"message":"130","line":6,"column":3,"nodeType":"128","messageId":"129","endLine":6,"endColumn":7},{"ruleId":"126","severity":1,"message":"127","line":3,"column":20,"nodeType":"128","messageId":"129","endLine":3,"endColumn":26},{"ruleId":"126","severity":1,"message":"149","line":4,"column":3,"nodeType":"128","messageId":"129","endLine":4,"endColumn":9},{"ruleId":"126","severity":1,"message":"150","line":5,"column":3,"nodeType":"128","messageId":"129","endLine":5,"endColumn":8},{"ruleId":"126","severity":1,"message":"157","line":31,"column":10,"nodeType":"128","messageId":"129","endLine":31,"endColumn":15},{"ruleId":"126","severity":1,"message":"158","line":35,"column":12,"nodeType":"128","messageId":"129","endLine":35,"endColumn":17},{"ruleId":"126","severity":1,"message":"159","line":39,"column":12,"nodeType":"128","messageId":"129","endLine":39,"endColumn":16},{"ruleId":"126","severity":1,"message":"160","line":4,"column":9,"nodeType":"128","messageId":"129","endLine":4,"endColumn":17},{"ruleId":"142","severity":1,"message":"161","line":25,"column":1,"nodeType":"144","endLine":29,"endColumn":2},{"ruleId":"142","severity":1,"message":"161","line":25,"column":1,"nodeType":"144","endLine":29,"endColumn":2},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Navbar' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'ReactDOM' is defined but never used.","'Home' is assigned a value but never used.","'Notes' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["162"],["163"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["162"],["163"],"'test' is assigned a value but never used.","'setTest' is assigned a value but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'InfoDisplay' is assigned a value but never used.","'setinviteReceived' is assigned a value but never used.","'About' is defined but never used.","'Users' is defined but never used.","'Home' is defined but never used.","'useState' is assigned a value but never used.","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]