[{"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\index.js":"1","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\App.js":"2","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\reportWebVitals.js":"3","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\Home.js":"4","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\mapStyles.js":"5","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\GoogleMaps.js":"6","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Timer.js":"7","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\services\\socket.js":"8","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Home.js":"9","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Navbar.js":"10","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\CreateGame.js":"11","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\services\\gameService.js":"12","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\services\\GameService.js":"13","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\GameHome.js":"14","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\GameLobby.js":"15","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Game.js":"16"},{"size":636,"mtime":1611574818456,"results":"17","hashOfConfig":"18"},{"size":1108,"mtime":1611581692674,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":1278,"mtime":1607816623511,"results":"21","hashOfConfig":"18"},{"size":3951,"mtime":1607731907475,"results":"22","hashOfConfig":"23"},{"size":8341,"mtime":1611602941568,"results":"24","hashOfConfig":"18"},{"size":950,"mtime":1611587781943,"results":"25","hashOfConfig":"18"},{"size":111,"mtime":1611545681526,"results":"26","hashOfConfig":"18"},{"size":443,"mtime":1611566565371,"results":"27","hashOfConfig":"18"},{"size":772,"mtime":1608593989744,"results":"28","hashOfConfig":"18"},{"size":1198,"mtime":1611566676574,"results":"29","hashOfConfig":"18"},{"size":768,"mtime":1608498896046,"results":"30","hashOfConfig":"18"},{"size":747,"mtime":1611545681525,"results":"31","hashOfConfig":"18"},{"size":6184,"mtime":1611587551214,"results":"32","hashOfConfig":"18"},{"size":5106,"mtime":1611566715854,"results":"33","hashOfConfig":"18"},{"size":9551,"mtime":1611595631209,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"d5cn1p",{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},"in944b",{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"37"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"37"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"37"},"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\index.js",[],["82","83"],"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\App.js",["84","85"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport CreateGame from \"./components/CreateGame\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Home from \"./components/Home\";\r\nimport GameHome from \"./components/GameHome\";\r\nimport \"./index.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div className=\"navbar\">\r\n        <h1>GeoBesser</h1>\r\n        <ul className=\"navbar-list\">\r\n          <li>\r\n            <Link to=\"/game\">Game</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/users\">Users</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route path=\"/users\">\r\n          <h1>rendered Users</h1>\r\n        </Route>\r\n        <Route path=\"/game\">\r\n          <GameHome />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <div className=\"home render\">\r\n            <h1>Home render</h1>\r\n          </div>\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\reportWebVitals.js",[],"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\Home.js",["86","87","88","89","90","91","92","93","94"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Game from './App'\r\nimport Maps2 from './GoogleMaps'\r\n\r\nconst Home = () => (\r\n  <div> <h2>TKTL notes app</h2> </div>\r\n)\r\n\r\nconst Notes = () => (\r\n  <div> <h2>Statistics</h2> </div>\r\n)\r\n\r\nconst Users = () => (\r\n  <div> <h2>Users</h2> </div>\r\n)\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [page, setPage] = useState('game')\r\n\r\n const toPage = (page) => (event) => {\r\n    event.preventDefault()\r\n    setPage(page)\r\n  }\r\n\r\n  const content = () => {\r\n    if (page === 'game') {\r\n      return <Game />\r\n    } else if (page === 'maps2') {\r\n      return <Maps2 />\r\n    } else if (page === 'users') {\r\n      return <Users />\r\n    }\r\n  }\r\n\r\n\r\n  const padding = {\r\n    padding: 5\r\n  }\r\n\r\n  return (\r\n    <div className=\"fornavbar\">\r\n      <div>\r\n        <a href=\"\" onClick={toPage('game')} style={padding}>\r\n          Game\r\n        </a>\r\n        <a href=\"\" onClick={toPage('maps2')} style={padding}>\r\n          Maps2\r\n        </a>\r\n        <a href=\"\" onClick={toPage('users')} style={padding}>\r\n          Users\r\n        </a>\r\n        <a href=\"\" onClick={toPage('timer')} style={padding}>\r\n          Timer\r\n        </a>\r\n      </div>\r\n\r\n      {content()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App",["95","96"],"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\mapStyles.js",["97"],"export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#444444\"\r\n            },\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.neighborhood\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#e0dfe0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi.park\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#a8a9a8\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#5b5b5a\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    }\r\n]",["98","99"],"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\GoogleMaps.js",["100","101","102","103"],"import React from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n  StreetViewPanorama,\r\n} from \"@react-google-maps/api\";\r\nimport { useState, useRef, useCallback } from \"react\";\r\n// import mapStyle from '../mapStyles'\r\nimport \"../index.css\";\r\nimport { socket } from \"../services/socket\";\r\nimport { formatRelative } from \"date-fns\";\r\nimport { Rnd } from \"react-rnd\";\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst mapContainerStyle = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst center = {\r\n  lat: 51.442315302157304,\r\n  lng: 7.352482762465018,\r\n};\r\n\r\n//styles: mapStyle,\r\nconst options = {\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\n\r\nconst Map = ({\r\n  location,\r\n  guessMarkers,\r\n  marker,\r\n  setMarker,\r\n  player,\r\n  mapType,\r\n  gameId,\r\n  round,\r\n}) => {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyD-H7u_wA8hIqXBZteUdLr4oG0cVNoEl2c\",\r\n    libraries,\r\n  });\r\n\r\n  //const [marker, setMarker] = useState(null)\r\n  const [selected, setSelected] = useState(null);\r\n  const [dragging, setDragging] = useState(false);\r\n  //  const [markers, setMarkers] = useState(null)\r\n  //   const [coords, setCoords] = useState([])\r\n\r\n  // const [sizeWH, setSizeWH] = useState({ width: 320, height: 200 })\r\n  // const [position, setPosition] = useState({ x: 0, y: 0 })\r\n  // const [dragging, setDragging] = useState(false)\r\n  //   const [containerStyle, setContainerStyle] = useState({\r\n  //     width: '100%',\r\n  //     height: '100%'\r\n  //   })\r\n\r\n  const handleMapClick = useCallback((event) => {\r\n    console.log(\"maptype\", mapType);\r\n    if (mapType !== \"game\") return;\r\n    // console.log('object', guessMarkers)\r\n    // if (guessMarkers) return\r\n    const marker = {\r\n      lat: event.latLng.lat(),\r\n      lng: event.latLng.lng(),\r\n    };\r\n    socket.emit(\"CMSubmitGuess\", player, marker, gameId, round);\r\n    setMarker(marker);\r\n  }, []);\r\n\r\n  const mapRef = useRef();\r\n  const onMapLoad = useCallback((map) => (mapRef.current = map), []);\r\n\r\n  if (loadError) return \"Error loading maps\";\r\n  if (!isLoaded) return \"Loading Maps\";\r\n\r\n  const style = {\r\n    // display: \"flex\",\r\n    // alignItems: \"center\",\r\n    // justifyContent: \"center\",\r\n    border: \"solid 1px #ddd\",\r\n    zIndex: 10000,\r\n  };\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      {/* <button onClick={() => mapRef.current.panTo({lat: 43, lng: -75})}>pan To from Map reference</button> */}\r\n      <Rnd\r\n        style={style}\r\n        disableDragging={dragging}\r\n        default={{\r\n          x: 0,\r\n          y: 0,\r\n          width: 320,\r\n          height: 200,\r\n        }}\r\n      >\r\n        <GoogleMap\r\n          mapContainerStyle={mapContainerStyle}\r\n          zoom={3}\r\n          center={center}\r\n          options={options}\r\n          onClick={handleMapClick}\r\n          onLoad={onMapLoad}\r\n        >\r\n          {marker ? (\r\n            <Marker\r\n              position={{ lat: marker.lat, lng: marker.lng }}\r\n              icon={{\r\n                url: \"/test.png\",\r\n                scaledSize: new window.google.maps.Size(30, 30),\r\n                origin: new window.google.maps.Point(0, 0),\r\n                anchor: new window.google.maps.Point(15, 15),\r\n              }}\r\n              onClick={() => {\r\n                setSelected(marker);\r\n              }}\r\n            />\r\n          ) : null}\r\n\r\n          {guessMarkers\r\n            ? console.log(\"guessMarkers there\", guessMarkers)\r\n            : console.log(\"guessMarkers not there\", guessMarkers)}\r\n\r\n          {guessMarkers\r\n            ? Object.values(guessMarkers).map((marker) => {\r\n                if (!marker) return null;\r\n\r\n                return (\r\n                  <Marker\r\n                    key={`${marker.lat + marker.lng}`}\r\n                    position={{ lat: marker.lat, lng: marker.lng }}\r\n                    icon={{\r\n                      url: \"/test.png\",\r\n                      scaledSize: new window.google.maps.Size(30, 30),\r\n                      origin: new window.google.maps.Point(0, 0),\r\n                      anchor: new window.google.maps.Point(15, 15),\r\n                    }}\r\n                    onClick={() => {\r\n                      setSelected(marker);\r\n                    }}\r\n                  />\r\n                );\r\n              })\r\n            : null}\r\n\r\n          {mapType !== \"game\" ? (\r\n            <Marker\r\n              key={`${location.lat + location.lng}`}\r\n              position={location}\r\n              icon={{\r\n                url: \"/goalflag.jpg\",\r\n                scaledSize: new window.google.maps.Size(30, 30),\r\n                origin: new window.google.maps.Point(0, 0),\r\n                anchor: new window.google.maps.Point(15, 15),\r\n              }}\r\n              onClick={() => {\r\n                setSelected(marker);\r\n              }}\r\n            />\r\n          ) : null}\r\n\r\n          {console.log(\"asd\", mapType)}\r\n\r\n          {/* {selected ? (\r\n          <InfoWindow\r\n            position={{ lat: selected.lat, lng: selected.lng }}\r\n            onCloseClick={() => setSelected(null)}\r\n          >\r\n            <div>\r\n              <h2>test</h2>\r\n              <p>spotted at {formatRelative(selected.time, new Date())}</p>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null} */}\r\n        </GoogleMap>\r\n        <button onClick={() => setDragging(!dragging)}>disable dragging</button>\r\n      </Rnd>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StreetView = ({ location, setIsStreetViewRendered }) => {\r\n  console.log(\"LOCA in strteetview\", location);\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyD-H7u_wA8hIqXBZteUdLr4oG0cVNoEl2c\",\r\n    libraries,\r\n  });\r\n  //   const [coords, setCoords] = useState([])\r\n\r\n  const mapRef = React.useRef();\r\n  const onMapLoad = React.useCallback((map) => (mapRef.current = map), []);\r\n  const streetViewRef = React.useRef();\r\n  const onStreetViewLoad = useCallback(\r\n    (streetView) => {\r\n      console.log(\"streetvie rendered\", new Date().toISOString());\r\n      setIsStreetViewRendered(true);\r\n      return (streetViewRef.current = streetView);\r\n    },\r\n    [setIsStreetViewRendered]\r\n  );\r\n\r\n  if (loadError) return \"Error loading maps\";\r\n  if (!isLoaded)\r\n    return (\r\n      <div>\r\n        <p>\"Loading Maps\"</p>\r\n      </div>\r\n    );\r\n\r\n  //center is location cahnge\r\n  return (\r\n    <div className=\"street-view\">\r\n      <div className=\"map-controls\">\r\n        <button onClick={() => streetViewRef.current.setPosition(location)}>\r\n          back to start\r\n        </button>\r\n      </div>\r\n      {/* <button onClick={() => console.log(mapRef.current)}>mapRef</button>\r\n      <button onClick={() => console.log(streetViewRef.current)}>\r\n        streetViewRef\r\n      </button>\r\n      <button\r\n        onClick={() =>\r\n          console.log(\r\n            streetViewRef.current.getLocation().latLng.lat(),\r\n            streetViewRef.current.getLocation().latLng.lat()\r\n          )\r\n        }\r\n      >\r\n        get Position street VIew\r\n      </button> */}\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={3}\r\n        center={location}\r\n        options={options}\r\n        onLoad={onMapLoad}\r\n      >\r\n        <StreetViewPanorama\r\n          position={location}\r\n          visible={true}\r\n          options={{\r\n            disableDefaultUI: true,\r\n            enableCloseButton: false,\r\n            showRoadLabels: false,\r\n          }}\r\n          onLoad={onStreetViewLoad}\r\n          onStatusChanged={() => console.log(\"status changed\", streetViewRef)}\r\n        />\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction haversine_distance(mk1, mk2) {\r\n  var R = 6371.071; // Radius of the Earth in km\r\n  var rlat1 = mk1.position.lat() * (Math.PI / 180); // Convert degrees to radians\r\n  var rlat2 = mk2.position.lat() * (Math.PI / 180); // Convert degrees to radians\r\n  var difflat = rlat2 - rlat1; // Radian difference (latitudes)\r\n  var difflon = (mk2.position.lng() - mk1.position.lng()) * (Math.PI / 180); // Radian difference (longitudes)\r\n\r\n  var d =\r\n    2 *\r\n    R *\r\n    Math.asin(\r\n      Math.sqrt(\r\n        Math.sin(difflat / 2) * Math.sin(difflat / 2) +\r\n          Math.cos(rlat1) *\r\n            Math.cos(rlat2) *\r\n            Math.sin(difflon / 2) *\r\n            Math.sin(difflon / 2)\r\n      )\r\n    );\r\n  return d;\r\n}\r\n\r\nexport { Map, StreetView, haversine_distance };\r\n","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Timer.js",[],"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\services\\socket.js",["104"],"import { io } from 'socket.io-client';\r\nconst socketUrl = \"http://localhost:3001\"\r\n\r\nexport const socket = io()","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Home.js",["105","106","107","108","109"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div class=\"home\">\r\n      {/* <Navbar /> */}\r\n\r\n      <p>Select gamemode, play with friends, solo, </p>\r\n      <p>Vorgestellte gamemodi</p>\r\n      <p>Leaderboards / some stats</p>\r\n      <p>sidebar</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Navbar.js",["110","111","112"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const match = useRouteMatch()\r\n    return (\r\n          <div class=\"Navbar\">\r\n            <nav>\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={`${match.url}/createGame`}>Create Game</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/users\">Users</Link>\r\n                </li>\r\n                <li>\r\n                    <span>Userinfo</span>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n      );\r\n}\r\n\r\nexport default Navbar","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\CreateGame.js",["113","114","115","116","117","118"],"import gameService from \"../services/GameService\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nconst { useState } = require(\"react\");\r\nconst { socket } = require(\"../services/socket\");\r\n\r\nconst CreateGame = ({ setLocations }) => {\r\n  let history = useHistory();\r\n  console.log(\"asd\", history);\r\n  const gameOptions = {\r\n    gamemode: \"famous places\",\r\n    time: 300,\r\n    gameLeader: \"Playername\",\r\n    players: [],\r\n    estimates: [],\r\n  };\r\n\r\n  const handleCreateGame = (event) => {\r\n    event.preventDefault();\r\n    socket.emit(\"CMCreateGame\", gameOptions);\r\n    console.log(\"work?\");\r\n    gameService\r\n      .createGame(gameOptions)\r\n      .then((response) => {\r\n        const locations = response.locations;\r\n        setLocations(locations);\r\n        const gameId = response.gameId;\r\n        history.push(`${gameId}/lobby`);\r\n      })\r\n      .catch((error) => console.log(\"yes error\", error));\r\n  };\r\n  return (\r\n    <div>\r\n      <p>Game Host: Test</p>\r\n      <button className=\"button\" onClick={handleCreateGame}>\r\n        Create Game Now\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateGame;\r\n","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\services\\gameService.js",["119"],"C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\services\\GameService.js",["120"],"import axios from 'axios'\r\nconst baseUrl = '/api'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n        id: 10000,\r\n        content: 'This note is not saved to server',\r\n        date: '2019-05-30T17:30:31.098Z',\r\n        important: true,\r\n      }\r\n    return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst createGame = newObject => {\r\n    const request = axios.post(`${baseUrl}/game/`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.patch(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    createGame,\r\n    update\r\n}","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\GameHome.js",["121","122","123","124","125","126","127","128","129"],"// import { Rnd } from 'react-rnd'\r\n// import { useState } from 'react'\r\nimport React from \"react\";\r\nimport \"../index.css\";\r\nimport { Map, StreetView } from \"./GoogleMaps\";\r\n// import CurrentGameInfo from './components/CurrentGameInfo'\r\nimport Timer from \"./Timer\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { socket } from \"../services/socket\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\n//import Game from './Game'\r\nimport CreateGame from \"./CreateGame\";\r\nimport GameLobby from \"./GameLobby\";\r\nimport Game from \"./Game\";\r\nimport \"../index.css\";\r\n//team mode\r\n\r\nconst GameHome = () => {\r\n  const [isGameStarted, setIsGameStarted] = useState(false);\r\n  const [locations, setLocations] = useState(null);\r\n  const [player, setPlayer] = useState({ name: null, ready: false });\r\n\r\n  let match = useRouteMatch();\r\n  console.log(\"lloca loca loca\", locations);\r\n\r\n  return (\r\n    <div>\r\n      {/* The Topics page has its own <Switch> with more routes\r\n          that build on the /topics URL path. You can think of the\r\n          2nd <Route> here as an \"index\" page for all topics, or\r\n          the page that is shown when no topic is selected */}\r\n\r\n      <Switch>\r\n        <Route path={`${match.path}/create`}>\r\n          {console.log(\"path\", match.path)}\r\n          {/* <h1>rendered creategame</h1> */}\r\n          <CreateGame setLocations={setLocations} />\r\n        </Route>\r\n        <Route path={`${match.path}/:gameId/lobby`}>\r\n          <GameLobby\r\n            setIsGameStarted={setIsGameStarted}\r\n            player={player}\r\n            setPlayer={setPlayer}\r\n            locations={locations}\r\n            setLocations={setLocations}\r\n          />\r\n        </Route>\r\n        <Route path={`${match.path}/:gameId`}>\r\n          <Game locations={locations} player={player} />\r\n        </Route>\r\n        <Route path={match.path}>\r\n          <ModeSelection />\r\n          <h3>Create or find Game</h3>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ModeSelection = () => {\r\n  let match = useRouteMatch();\r\n  return (\r\n    <div>\r\n      <h1>GameHome Render</h1>\r\n\r\n      <ul>\r\n        <li>\r\n          <Link to={`${match.url}/create`}>Create Game</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${match.url}/join`}>Join</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nfunction RenderPath() {\r\n  let match = useRouteMatch();\r\n  console.log(match);\r\n  let { topicId } = useParams();\r\n  return <h3>Current path/component: {topicId}</h3>;\r\n}\r\n\r\n// const Map = () => {\r\n\r\n//   const [coords, setCoords] = useState([])\r\n\r\n//   const [sizeWH, setSizeWH] = useState({ width: 320, height: 200 })\r\n//   const [position, setPosition] = useState({ x: 0, y: 0 })\r\n//   const [dragging, setDragging] = useState(false)\r\n//   const [containerStyle, setContainerStyle] = useState({\r\n//     width: '100%',\r\n//     height: '100%'\r\n//   })\r\n\r\n// const handleMapClick = (eventt) => {\r\n//   setCoords(`Latitude: ${eventt.latLng.lat()} Longitude: ${eventt.latLng.lng()}`)\r\n// }\r\n\r\n// const containerStyle = {\r\n//   width: \"100%\",\r\n//   height: \"100%\"\r\n// };\r\n// const style = {\r\n//   display: \"flex\",\r\n//   alignItems: \"center\",\r\n//   justifyContent: \"center\",\r\n//   border: \"solid 20px #ddd\",\r\n//   background: \"#f0f0f0\"\r\n// };\r\n\r\n// class Map extends React.Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       width: 200,\r\n//       height: 200,\r\n//       x: 10,\r\n//       y: 10\r\n//     };\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//         <div class=\"mapflex\">\r\n//           <button>test</button>\r\n//         <Rnd\r\n//           className={Map}\r\n//           style={{backgroundColor: \"#ff6f69\", border: \"10px solid green\"}}\r\n//           size={{ width: this.state.width, height: this.state.height }}\r\n//           position={{ x: this.state.x, y: this.state.y }}\r\n//           onDragStop={(e, d) => {\r\n//             this.setState({ x: d.x, y: d.y });\r\n//           }}\r\n//           onResizeStop={(e, direction, ref, delta, position) => {\r\n//             this.setState({\r\n//               width: ref.style.width,\r\n//               height: ref.style.height,\r\n//               ...position\r\n//             });\r\n//           }}\r\n//         >t<button>asd</button>\r\n//         est\r\n//           {/* <LoadScript googleMapsApiKey=\"AIzaSyANah7Rp_9i7F0FkhJ0w50q9TGqQbUErOM\">\r\n//             <GoogleMap\r\n//               mapContainerStyle={containerStyle}\r\n//               center={center}\r\n//               zoom={10}\r\n//               onClick={() => {\r\n//                 console.log(this.state.x);\r\n//               }}\r\n//             ></GoogleMap>\r\n//           </LoadScript> */}\r\n//         </Rnd>\r\n//         </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const Street = ({ center }) => {\r\n//   const [coords, setCoords] = useState([])\r\n\r\n//   const [sizeWH, setSizeWH] = useState({ width: 320, height: 200 })\r\n//   const [position, setPosition] = useState({ x: 0, y: 0 })\r\n//   const [dragging, setDragging] = useState(false)\r\n//   const [containerStyleStreetView, setContainerStyleStreetView] = useState({\r\n//     width: '100%',\r\n//     height: '100%'\r\n//   })\r\n//   const [pano, setPano] = useState({\r\n//     lat: -3.745,\r\n//     lng: -38.523\r\n//   })\r\n\r\n//   return (\r\n//     <div className=\"StreetView\">\r\n//       {/* <button onClick={() => {setPano({\r\n//     lat: -3.745,\r\n//     lng: -38.523\r\n//   })}}>change location</button> */}\r\n//       <LoadScript\r\n//         googleMapsApiKey=\"AIzaSyANah7Rp_9i7F0FkhJ0w50q9TGqQbUErOM\"\r\n//       >\r\n//         <GoogleMap\r\n//           mapContainerStyle={containerStyleStreetView}\r\n//           center={center}\r\n//           zoom={10}\r\n//         >\r\n//           <StreetViewPanorama\r\n//             position={pano}\r\n//             visible={true}\r\n//             options={{disableDefaultUI: true, enableCloseButton: false}}\r\n//             onLoad={(panorama => setPano(panorama))}\r\n\r\n//           />\r\n//           { /* Child components, such as markers, info windows, etc. */}\r\n//           <></>\r\n//         </GoogleMap>\r\n//       </LoadScript>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nexport default GameHome;\r\n","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\GameLobby.js",["130","131","132","133"],"import { useParams, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst { useState, useEffect } = require(\"react\");\r\nconst { socket } = require(\"../services/socket\");\r\n\r\n//try it this way if it doesn't work you might need to look at react contexts/redux depending on what you prefer\r\nconst GameLobby = ({\r\n  setIsGameStarted,\r\n  player,\r\n  setPlayer,\r\n  locations,\r\n  setLocations,\r\n}) => {\r\n  useEffect(() => {\r\n    socket.on(\"testReceived\", (test) => {\r\n      setPlayers((players) => [...players, test]);\r\n      console.log(\"testvontestreceived\", test);\r\n    });\r\n    socket.on(\"SMPlayerConfirmSetName\", (playerName) => {\r\n      // console.log('received')\r\n      setPlayer({ ...player, name: playerName });\r\n      console.log(\"called setplayer\");\r\n    });\r\n    socket.on(\"SMPlayerDenySetName\", (reason) => alert(reason));\r\n    socket.on(\"SMGamePlayerJoin\", (players) => {\r\n      console.log(\"playerjoin\");\r\n      console.log(\"players\", players);\r\n\r\n      setPlayers(players); //previousPlayers => previousPlayers.concat(player)\r\n    });\r\n    socket.on(\"SMPlayerConfirmReady\", (sPlayer) => {\r\n      setPlayers((previousPlayers) => {\r\n        console.log(\r\n          \"test\",\r\n          previousPlayers.map((player) =>\r\n            player.name === sPlayer.name ? sPlayer : player\r\n          )\r\n        );\r\n        return previousPlayers.map((player) =>\r\n          player.name === sPlayer.name ? sPlayer : player\r\n        );\r\n      });\r\n    });\r\n    socket.on(\"SMChangeLobbyPlayerState\", (newPlayerState) => {\r\n      setPlayers((prevPlayers) => {\r\n        return prevPlayers.map((player) =>\r\n          player.name === newPlayerState.name ? newPlayerState : player\r\n        );\r\n      });\r\n    });\r\n    socket.on(\"SMStartGameDecline\", (reason) => {\r\n      setNotification({ message: reason, style: \"error\" });\r\n      setTimeout(() => setNotification({ message: null }), 3000);\r\n    });\r\n    socket.on(\"SMStartGameAccept\", (gameId, locations) => {\r\n      setLocations(locations);\r\n      history.push(`/game/${gameId}`);\r\n    });\r\n\r\n    return () => {\r\n      socket.offAny(() => console.log(\"off any\"));\r\n    };\r\n  }, []);\r\n\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n  //const [player, setPlayer] = useState({name: null, ready: false})\r\n  const [players, setPlayers] = useState([\r\n    { name: \"defaultPlayer\", ready: false },\r\n  ]);\r\n  const [teststate, setTeststate] = useState(false);\r\n  const [notification, setNotification] = useState({\r\n    message: null,\r\n    style: null,\r\n  });\r\n\r\n  const { gameId } = useParams();\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n  console.log(gameId);\r\n  console.log(\"hsitoryasd\", history);\r\n  // send playername upon loading the site\r\n  const handleStartGame = () => {\r\n    console.log(\"Start game button function\");\r\n    socket.emit(\"CMStartGameRequest\", gameId, players);\r\n  };\r\n\r\n  const handleReady = () => {\r\n    socket.emit(\"CMPlayerReady\", player, gameId);\r\n  };\r\n\r\n  const handleNameSubmit = (event) => {\r\n    event.preventDefault();\r\n    socket.emit(\"CMPlayerSetName\", nameInput, gameId);\r\n  };\r\n\r\n  const handleNameInputChange = (event) => setNameInput(event.target.value);\r\n\r\n  console.log(players);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Game Lobby</h1>\r\n\r\n      <ul>\r\n        {players.map((player) => (\r\n          <li key={player.name}>{`${player.name} ${\r\n            player.ready ? \"Ready\" : \"NOT ready\"\r\n          }`}</li>\r\n        ))}\r\n      </ul>\r\n      <button className=\"button\" onClick={handleReady}>\r\n        Ready Up\r\n      </button>\r\n      <button className=\"button\" onClick={handleStartGame}>\r\n        Start Game\r\n      </button>\r\n\r\n      <form onSubmit={handleNameSubmit}>\r\n        <label>\r\n          Player Name:\r\n          <input\r\n            type=\"text\"\r\n            value={nameInput}\r\n            onChange={handleNameInputChange}\r\n          />\r\n        </label>\r\n        <input className=\"button\" type=\"submit\" value=\"Set Name\" />\r\n      </form>\r\n\r\n      <p>Your Name {player.name ? player.name : \"not set\"} </p>\r\n      <button\r\n        className=\"button\"\r\n        onClick={() => socket.emit(\"test\", \"testvon button\")}\r\n      >\r\n        test emit\r\n      </button>\r\n      <p>{teststate ? \"true\" : \"false\"}</p>\r\n      <Notification notificationDetails={notification} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Notification = ({ notificationDetails }) => {\r\n  console.log(notificationDetails);\r\n  const error = {\r\n    color: \"red\",\r\n    background: \"lightgrey\",\r\n    fontSize: 20,\r\n    borderStyle: \"solid\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  };\r\n\r\n  const success = {\r\n    color: \"green\",\r\n    background: \"lightgrey\",\r\n    fontSize: 20,\r\n    borderStyle: \"solid\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  };\r\n  if (notificationDetails.message === null) return null;\r\n  let style = undefined;\r\n\r\n  if (notificationDetails.style === \"success\") style = success;\r\n\r\n  if (notificationDetails.style === \"error\") style = error;\r\n\r\n  return <div style={style}>{notificationDetails.message}</div>;\r\n};\r\n\r\nexport default GameLobby;\r\n","C:\\Users\\Marco\\Desktop\\navigation_simulator\\src\\components\\Game.js",["134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"// import { Rnd } from 'react-rnd'\r\n// import { useState } from 'react'\r\nimport React from \"react\";\r\nimport \"../index.css\";\r\nimport { Map, StreetView } from \"./GoogleMaps\";\r\n// import GameInfo from './components/GameInfo'\r\nimport Timer from \"./Timer\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { socket } from \"../services/socket\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport CreateGame from \"./CreateGame\";\r\nimport GameLobby from \"./GameLobby\";\r\nimport \"../index.css\";\r\nimport { Rnd } from \"react-rnd\";\r\n//team mode\r\n\r\nconst Round = ({ setGameStatus, location, player, round, gameId }) => {\r\n  const [timerState, setTimerState] = useState(null);\r\n  const [marker, setMarker] = useState(null);\r\n  const [isStreetViewRendered, setIsStreetViewRendered] = useState(false);\r\n  const [RndSize, setRndSize] = useState({ width: 200, height: 200 });\r\n  const [RndPosition, setRndPosition] = useState({\r\n    x: 10,\r\n    y: 10,\r\n  });\r\n\r\n  const style = {\r\n    // display: \"flex\",\r\n    // alignItems: \"center\",\r\n    // justifyContent: \"center\",\r\n    border: \"solid 1px #ddd\",\r\n    zIndex: 10000,\r\n  };\r\n\r\n  //console.log('timerState', timerState)\r\n\r\n  if (timerState === 0) {\r\n    console.log(\"called cmfinishRound\");\r\n    socket.emit(\"CMFinishRound\", gameId, player.name, round);\r\n    setGameStatus(\"isPostRoundDisplay\");\r\n    return null;\r\n  }\r\n\r\n  const SubmitGuess = () => {};\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <StreetView\r\n        location={location}\r\n        setIsStreetViewRendered={setIsStreetViewRendered}\r\n      />\r\n      {/* <Rnd\r\n        style={style}\r\n        size={RndSize}\r\n        position={RndPosition}\r\n        onDragStop={(e, d) => {\r\n          this.setState({ x: d.x, y: d.y });\r\n        }}\r\n        onResizeStop={(e, direction, ref, delta, position) => {\r\n          this.setState({\r\n            width: ref.style.width,\r\n            height: ref.style.height,\r\n            ...position,\r\n          });\r\n        }}\r\n      >\r\n\r\n      </Rnd> */}\r\n      {/* <Rnd\r\n        style={style}\r\n        default={{\r\n          x: 0,\r\n          y: 0,\r\n          width: 320,\r\n          height: 200,\r\n        }}\r\n      >\r\n        <Map\r\n          location={location}\r\n          marker={marker}\r\n          setMarker={setMarker}\r\n          player={player}\r\n          round={round}\r\n          gameId={gameId}\r\n          mapType={\"game\"}\r\n        />\r\n        test\r\n      </Rnd> */}\r\n      <Map\r\n        location={location}\r\n        marker={marker}\r\n        setMarker={setMarker}\r\n        player={player}\r\n        round={round}\r\n        gameId={gameId}\r\n        mapType={\"game\"}\r\n      />\r\n\r\n      <button\r\n        className=\"button\"\r\n        onClick={() => {\r\n          console.log(\"called button submitguess\");\r\n          socket.emit(\"CMSubmitGuess\", player, marker, gameId, round);\r\n          setTimerState(0);\r\n        }}\r\n      >\r\n        Guess!\r\n      </button>\r\n      <GameInfo\r\n        setTimerState={setTimerState}\r\n        isStreetViewRendered={isStreetViewRendered}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Results = ({ playerResult }) => {\r\n  return <li> `${playerResult}`</li>;\r\n};\r\n\r\nconst MidgameResults = ({\r\n  round,\r\n  setRound,\r\n  setGameStatus,\r\n  location,\r\n  player,\r\n  gameId,\r\n}) => {\r\n  const [guessMarkers, setGuessMarkers] = useState(null);\r\n  const [results, setResults] = useState(null);\r\n\r\n  console.log(\"asd\", location);\r\n  useEffect(() => {\r\n    socket.emit(\"CMGetGuessPositions\", player, round, gameId);\r\n    socket.emit(\"CMGetMidgameResults\", gameId, round);\r\n    socket.on(\"SMSendGuessPositions\", (guessPositions) => {\r\n      console.log(\"asdmarkers\", Object.values(guessPositions));\r\n      setGuessMarkers(guessPositions);\r\n    });\r\n    socket.on(\"SMSendMidgameResults\", (results) => {\r\n      console.log(\"SMSendMidgameResults\", results);\r\n      setResults(results);\r\n    });\r\n\r\n    return () => {\r\n      socket.offAny(() => console.log(\"off any\"));\r\n    };\r\n  }, []);\r\n\r\n  console.log(\"guessmarkers,\", guessMarkers);\r\n\r\n  return (\r\n    <div className=\"midgame-results\">\r\n      {console.log(\"results von midgam rresults\", results)}\r\n      <Map location={location} guessMarkers={guessMarkers} />\r\n      {!guessMarkers ? <div>Calculating stats</div> : null}\r\n      <InterimResults\r\n        round={round}\r\n        setRound={setRound}\r\n        setGameStatus={setGameStatus}\r\n        results={results}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InterimResults = ({ round, setRound, setGameStatus, results }) => {\r\n  console.log(\"anka\", results);\r\n  let resultsArray = null;\r\n  if (results) resultsArray = Object.entries(results);\r\n  console.log(\"resultsarray\", resultsArray);\r\n\r\n  const handleNextRound = () => {\r\n    if (round < 5) {\r\n      setGameStatus(\"isInRound\");\r\n      setRound((previousState) => previousState + 1);\r\n    }\r\n\r\n    if (round === 4) {\r\n      setGameStatus(\"isGameOver\");\r\n      return <> </>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {results ? (\r\n        <ul>\r\n          {resultsArray.map((result) => (\r\n            <li>\r\n              Player {result[0]} Distance to goal{\" \"}\r\n              {isNaN(result[1]) ? result[1] : result[1].toFixed(2)}km\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        \"No results received\"\r\n      )}\r\n      <button onClick={handleNextRound}>Next round</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Game = ({ locations, player }) => {\r\n  const { gameId } = useParams();\r\n  const [gameStatus, setGameStatus] = useState(\"isInRound\");\r\n  const [round, setRound] = useState(0);\r\n\r\n  console.log(\"locations in game\", locations);\r\n  switch (gameStatus) {\r\n    case \"isInRound\":\r\n      return (\r\n        <Round\r\n          setGameStatus={setGameStatus}\r\n          location={locations[round]}\r\n          player={player}\r\n          round={round}\r\n          gameId={gameId}\r\n        />\r\n      );\r\n      break;\r\n    case \"isPostRoundDisplay\":\r\n      return (\r\n        <MidgameResults\r\n          round={round}\r\n          setRound={setRound}\r\n          setGameStatus={setGameStatus}\r\n          location={locations[round]}\r\n          player={player.name}\r\n          gameId={gameId}\r\n        />\r\n      );\r\n      break;\r\n    case \"isGameOver\":\r\n      return <GameOverResults gameId={gameId} />;\r\n      break;\r\n\r\n    default:\r\n      return <div>Something went wrong</div>;\r\n      break;\r\n  }\r\n};\r\n\r\nconst GameOverResults = ({ gameId }) => {\r\n  const [endgameResults, setEndgameResults] = useState(null);\r\n  const [endgameResults2, setEndgameResults2] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   socket.emit(\"CMGetEndgameResults\", gameId);\r\n  //   socket.on(\"SMSendEndgameResults\", (results) => {\r\n  //     console.log(\"SMSendEndgameResults\", results);\r\n  //     setEndgameResults(results);\r\n  //   });\r\n  //   return () => {\r\n  //     socket.offAny();\r\n  //   };\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   {\r\n  //     endgameResults\r\n  //       ? endgameResults.map((round, index) => {\r\n  //           for (const [key, value] of Object.entries(round)) {\r\n  //             console.log(\"keyvalue of\", key, value);\r\n  //             setEndgameResults2((prev) =>\r\n  //               prev.push(`Player${key} distance to goal ${value.distance}`)\r\n  //             );\r\n  //           }\r\n  //         })\r\n  //       : null;\r\n  //   }\r\n  //   return () => {};\r\n  // }, [endgameResults]);\r\n\r\n  return (\r\n    <div>\r\n      {/* <ul>\r\n        endgameResults2.map((round, i) =>\r\n        <li>{\r\n          Round {i} stats{round}}\r\n        </li>\r\n        )\r\n      </ul> */}\r\n      <p>Hehe hallo Freunde :D</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InfoDisplay = () => {\r\n  return (\r\n    <div className=\"info-display\">\r\n      {/* mouse click position {coords} */}\r\n      lorem ipsum\r\n      {/* <div>\r\n          <button onClick={() => setDragging(!dragging)}>disable drag</button>\r\n        </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GameInfo = ({\r\n  timerState,\r\n  setTimerState,\r\n  formatted,\r\n  isStreetViewRendered,\r\n}) => {\r\n  const [timer2, stimer2] = useState(null);\r\n\r\n  if (!isStreetViewRendered) {\r\n    return (\r\n      <div className=\"game-info\">\r\n        {console.log(\"not rendered\", new Date().toISOString())}NOT RENDERED\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"game-info\">\r\n      {console.log(\"rendreerd at\", new Date().toISOString())}\r\n      <Timer setTimerState={setTimerState} />\r\n      round ,\r\n    </div>\r\n  );\r\n};\r\n\r\n// const Navbar = () => {\r\n\r\n//   const [inviteReceived, setinviteReceived] = useState(false)\r\n//   useEffect(() => {\r\n//     socket.on('connect', () => {\r\n//       console.log('connected')\r\n//     })\r\n//     socket.on('disconnect', () => {\r\n//       console.log('disconnected')\r\n//     })\r\n//     socket.on('SMConnectionReceived', (arg) => console.log(arg))\r\n//     socket.on('locations_send', (locations) => {\r\n//       console.log('loca', locations)\r\n\r\n//     })\r\n//     console.log('hi')\r\n//     return () => {\r\n//       socket.offAny(() => console.log('off any'))\r\n//       console.log('cleanup')\r\n//     }\r\n//   }, [])\r\n//   return (\r\n//     <div className=\"navbar\" > <h1>Professor Geo {\" \"} <span role=\"img\" aria-label=\"geo\">🐱‍🏍</span></h1>\r\n//     {/* <Search /> */}\r\n//     <button onClick={() => {socket.emit('location_request', ['test'])}}>get random map</button>\r\n//     {inviteReceived ? \"pending invite\" : \"no pending invite\"}\r\n//     <button onClick={(params) => {\r\n//       socket.emit('CMCreateGame')\r\n\r\n//     }}>Create New Game</button>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nexport default Game;\r\n",{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":18},{"ruleId":"166","severity":1,"message":"170","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":14},{"ruleId":"166","severity":1,"message":"171","line":1,"column":27,"nodeType":"168","messageId":"169","endLine":1,"endColumn":36},{"ruleId":"166","severity":1,"message":"172","line":1,"column":38,"nodeType":"168","messageId":"169","endLine":1,"endColumn":44},{"ruleId":"166","severity":1,"message":"173","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":16},{"ruleId":"166","severity":1,"message":"174","line":6,"column":7,"nodeType":"168","messageId":"169","endLine":6,"endColumn":11},{"ruleId":"166","severity":1,"message":"175","line":10,"column":7,"nodeType":"168","messageId":"169","endLine":10,"endColumn":12},{"ruleId":"176","severity":1,"message":"177","line":47,"column":9,"nodeType":"178","endLine":47,"endColumn":61},{"ruleId":"176","severity":1,"message":"177","line":50,"column":9,"nodeType":"178","endLine":50,"endColumn":62},{"ruleId":"176","severity":1,"message":"177","line":53,"column":9,"nodeType":"178","endLine":53,"endColumn":62},{"ruleId":"176","severity":1,"message":"177","line":56,"column":9,"nodeType":"178","endLine":56,"endColumn":62},{"ruleId":"162","replacedBy":"179"},{"ruleId":"164","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":1,"column":1,"nodeType":"183","endLine":191,"endColumn":2},{"ruleId":"162","replacedBy":"184"},{"ruleId":"164","replacedBy":"185"},{"ruleId":"166","severity":1,"message":"186","line":6,"column":3,"nodeType":"168","messageId":"169","endLine":6,"endColumn":13},{"ruleId":"166","severity":1,"message":"187","line":13,"column":10,"nodeType":"168","messageId":"169","endLine":13,"endColumn":24},{"ruleId":"166","severity":1,"message":"188","line":50,"column":10,"nodeType":"168","messageId":"169","endLine":50,"endColumn":18},{"ruleId":"189","severity":1,"message":"190","line":74,"column":6,"nodeType":"191","endLine":74,"endColumn":8,"suggestions":"192"},{"ruleId":"166","severity":1,"message":"193","line":2,"column":7,"nodeType":"168","messageId":"169","endLine":2,"endColumn":16},{"ruleId":"166","severity":1,"message":"194","line":2,"column":27,"nodeType":"168","messageId":"169","endLine":2,"endColumn":33},{"ruleId":"166","severity":1,"message":"195","line":2,"column":35,"nodeType":"168","messageId":"169","endLine":2,"endColumn":41},{"ruleId":"166","severity":1,"message":"196","line":2,"column":43,"nodeType":"168","messageId":"169","endLine":2,"endColumn":48},{"ruleId":"166","severity":1,"message":"197","line":2,"column":50,"nodeType":"168","messageId":"169","endLine":2,"endColumn":54},{"ruleId":"166","severity":1,"message":"170","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":14},{"ruleId":"166","severity":1,"message":"194","line":3,"column":20,"nodeType":"168","messageId":"169","endLine":3,"endColumn":26},{"ruleId":"166","severity":1,"message":"195","line":4,"column":3,"nodeType":"168","messageId":"169","endLine":4,"endColumn":9},{"ruleId":"166","severity":1,"message":"196","line":5,"column":3,"nodeType":"168","messageId":"169","endLine":5,"endColumn":8},{"ruleId":"166","severity":1,"message":"194","line":3,"column":20,"nodeType":"168","messageId":"169","endLine":3,"endColumn":26},{"ruleId":"166","severity":1,"message":"195","line":4,"column":3,"nodeType":"168","messageId":"169","endLine":4,"endColumn":9},{"ruleId":"166","severity":1,"message":"196","line":5,"column":3,"nodeType":"168","messageId":"169","endLine":5,"endColumn":8},{"ruleId":"166","severity":1,"message":"197","line":6,"column":3,"nodeType":"168","messageId":"169","endLine":6,"endColumn":7},{"ruleId":"166","severity":1,"message":"198","line":7,"column":3,"nodeType":"168","messageId":"169","endLine":7,"endColumn":11},{"ruleId":"166","severity":1,"message":"199","line":11,"column":9,"nodeType":"168","messageId":"169","endLine":11,"endColumn":17},{"ruleId":"181","severity":1,"message":"200","line":25,"column":1,"nodeType":"183","endLine":29,"endColumn":2},{"ruleId":"181","severity":1,"message":"200","line":25,"column":1,"nodeType":"183","endLine":29,"endColumn":2},{"ruleId":"166","severity":1,"message":"201","line":5,"column":10,"nodeType":"168","messageId":"169","endLine":5,"endColumn":13},{"ruleId":"166","severity":1,"message":"202","line":5,"column":15,"nodeType":"168","messageId":"169","endLine":5,"endColumn":25},{"ruleId":"166","severity":1,"message":"203","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":13},{"ruleId":"166","severity":1,"message":"172","line":8,"column":20,"nodeType":"168","messageId":"169","endLine":8,"endColumn":26},{"ruleId":"166","severity":1,"message":"171","line":8,"column":28,"nodeType":"168","messageId":"169","endLine":8,"endColumn":37},{"ruleId":"166","severity":1,"message":"204","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":16},{"ruleId":"166","severity":1,"message":"194","line":11,"column":20,"nodeType":"168","messageId":"169","endLine":11,"endColumn":26},{"ruleId":"166","severity":1,"message":"205","line":26,"column":10,"nodeType":"168","messageId":"169","endLine":26,"endColumn":23},{"ruleId":"166","severity":1,"message":"206","line":84,"column":10,"nodeType":"168","messageId":"169","endLine":84,"endColumn":20},{"ruleId":"166","severity":1,"message":"170","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"207","line":64,"column":6,"nodeType":"191","endLine":64,"endColumn":8,"suggestions":"208"},{"ruleId":"166","severity":1,"message":"209","line":71,"column":21,"nodeType":"168","messageId":"169","endLine":71,"endColumn":33},{"ruleId":"166","severity":1,"message":"210","line":79,"column":9,"nodeType":"168","messageId":"169","endLine":79,"endColumn":14},{"ruleId":"166","severity":1,"message":"172","line":8,"column":20,"nodeType":"168","messageId":"169","endLine":8,"endColumn":26},{"ruleId":"166","severity":1,"message":"194","line":11,"column":20,"nodeType":"168","messageId":"169","endLine":11,"endColumn":26},{"ruleId":"166","severity":1,"message":"195","line":12,"column":3,"nodeType":"168","messageId":"169","endLine":12,"endColumn":9},{"ruleId":"166","severity":1,"message":"196","line":13,"column":3,"nodeType":"168","messageId":"169","endLine":13,"endColumn":8},{"ruleId":"166","severity":1,"message":"197","line":14,"column":3,"nodeType":"168","messageId":"169","endLine":14,"endColumn":7},{"ruleId":"166","severity":1,"message":"211","line":15,"column":3,"nodeType":"168","messageId":"169","endLine":15,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":18,"column":8,"nodeType":"168","messageId":"169","endLine":18,"endColumn":18},{"ruleId":"166","severity":1,"message":"212","line":19,"column":8,"nodeType":"168","messageId":"169","endLine":19,"endColumn":17},{"ruleId":"166","severity":1,"message":"213","line":21,"column":10,"nodeType":"168","messageId":"169","endLine":21,"endColumn":13},{"ruleId":"166","severity":1,"message":"214","line":28,"column":10,"nodeType":"168","messageId":"169","endLine":28,"endColumn":17},{"ruleId":"166","severity":1,"message":"215","line":28,"column":19,"nodeType":"168","messageId":"169","endLine":28,"endColumn":29},{"ruleId":"166","severity":1,"message":"216","line":29,"column":10,"nodeType":"168","messageId":"169","endLine":29,"endColumn":21},{"ruleId":"166","severity":1,"message":"217","line":29,"column":23,"nodeType":"168","messageId":"169","endLine":29,"endColumn":37},{"ruleId":"166","severity":1,"message":"218","line":34,"column":9,"nodeType":"168","messageId":"169","endLine":34,"endColumn":14},{"ruleId":"166","severity":1,"message":"219","line":51,"column":9,"nodeType":"168","messageId":"169","endLine":51,"endColumn":20},{"ruleId":"166","severity":1,"message":"220","line":124,"column":7,"nodeType":"168","messageId":"169","endLine":124,"endColumn":14},{"ruleId":"189","severity":1,"message":"221","line":155,"column":6,"nodeType":"191","endLine":155,"endColumn":8,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":228,"column":7,"nodeType":"225","messageId":"226","endLine":228,"endColumn":13},{"ruleId":"223","severity":1,"message":"224","line":240,"column":7,"nodeType":"225","messageId":"226","endLine":240,"endColumn":13},{"ruleId":"223","severity":1,"message":"224","line":243,"column":7,"nodeType":"225","messageId":"226","endLine":243,"endColumn":13},{"ruleId":"223","severity":1,"message":"224","line":247,"column":7,"nodeType":"225","messageId":"226","endLine":247,"endColumn":13},{"ruleId":"166","severity":1,"message":"227","line":252,"column":10,"nodeType":"168","messageId":"169","endLine":252,"endColumn":24},{"ruleId":"166","severity":1,"message":"228","line":252,"column":26,"nodeType":"168","messageId":"169","endLine":252,"endColumn":43},{"ruleId":"166","severity":1,"message":"229","line":253,"column":10,"nodeType":"168","messageId":"169","endLine":253,"endColumn":25},{"ruleId":"166","severity":1,"message":"230","line":253,"column":27,"nodeType":"168","messageId":"169","endLine":253,"endColumn":45},{"ruleId":"166","severity":1,"message":"231","line":296,"column":7,"nodeType":"168","messageId":"169","endLine":296,"endColumn":18},{"ruleId":"166","severity":1,"message":"232","line":314,"column":10,"nodeType":"168","messageId":"169","endLine":314,"endColumn":16},{"ruleId":"166","severity":1,"message":"233","line":314,"column":18,"nodeType":"168","messageId":"169","endLine":314,"endColumn":25},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'CreateGame' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'ReactDOM' is defined but never used.","'Home' is assigned a value but never used.","'Notes' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["234"],["235"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["234"],["235"],"'InfoWindow' is defined but never used.","'formatRelative' is defined but never used.","'selected' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'gameId', 'mapType', 'player', 'round', and 'setMarker'. Either include them or remove the dependency array. If 'setMarker' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["236"],"'socketUrl' is assigned a value but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'useState' is assigned a value but never used.","Assign object to a variable before exporting as module default","'Map' is defined but never used.","'StreetView' is defined but never used.","'Timer' is defined but never used.","'socket' is defined but never used.","'isGameStarted' is assigned a value but never used.","'RenderPath' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'player', 'setLocations', and 'setPlayer'. Either include them or remove the dependency array. If 'setPlayer' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["237"],"'setTeststate' is assigned a value but never used.","'match' is assigned a value but never used.","'useRouteMatch' is defined but never used.","'GameLobby' is defined but never used.","'Rnd' is defined but never used.","'RndSize' is assigned a value but never used.","'setRndSize' is assigned a value but never used.","'RndPosition' is assigned a value but never used.","'setRndPosition' is assigned a value but never used.","'style' is assigned a value but never used.","'SubmitGuess' is assigned a value but never used.","'Results' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'gameId', 'player', and 'round'. Either include them or remove the dependency array.",["238"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'endgameResults' is assigned a value but never used.","'setEndgameResults' is assigned a value but never used.","'endgameResults2' is assigned a value but never used.","'setEndgameResults2' is assigned a value but never used.","'InfoDisplay' is assigned a value but never used.","'timer2' is assigned a value but never used.","'stimer2' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},"Update the dependencies array to be: [gameId, mapType, player, round, setMarker]",{"range":"245","text":"246"},"Update the dependencies array to be: [history, player, setLocations, setPlayer]",{"range":"247","text":"248"},"Update the dependencies array to be: [gameId, player, round]",{"range":"249","text":"250"},[1905,1907],"[gameId, mapType, player, round, setMarker]",[2154,2156],"[history, player, setLocations, setPlayer]",[4012,4014],"[gameId, player, round]"]